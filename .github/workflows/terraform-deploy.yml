name: Deploy
on:
  push:
    branches:
    - master

jobs:
  deploy:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@v1.0.0

    - name: Decrypt secrets
      uses: actions/bin/sh@master
      with:
        args: |
          if [ -f "terraform.tfstate" ]; then
            echo "State found in repo!"
            exit 1
          fi
          if [ ! -f "terraform.tfstate.enc" ]; then
            echo "No state found, starting fresh (!)"
            exit 0
          fi
          openssl enc -aes-256-cbc -salt -in terraform.tfstate.enc -out terraform.tfstate -d -pass env:STATE_PASSWORD
          rm terraform.tfstate.enc
      env:
        STATE_PASSWORD: ${{ secrets.TF_STATE_SECRET }}

    - name: Terraform - Init
      uses: hashicorp/terraform-github-actions/init@v0.4.4

    - name: Terraform - Validate
      uses: hashicorp/terraform-github-actions/validate@v0.4.4
  
    - name: Terraform - Plan
      uses: hashicorp/terraform-github-actions/plan@v0.4.4
      env:
        TF_ACTION_COMMENT: false
        TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_cloudflare_email }}
        TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_cloudflare_token }}
        TF_VAR_github_org: ${{ secrets.TF_VAR_github_org }}
        TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
        TF_VAR_scaleway_org: ${{ secrets. TF_VAR_scaleway_org }}
        TF_VAR_scaleway_token: ${{ secrets.TF_VAR_scaleway_token }}
        TF_VAR_ssh_root_public_key: ${{ secrets.TF_VAR_ssh_root_public_key }}
        TF_VAR_ssh_root_private_key: ${{ secrets.TF_VAR_ssh_root_private_key }}
        TF_VAR_ssh_tech_public_key: ${{ secrets.TF_VAR_ssh_tech_public_key }}

    - name: Terraform - Apply
      uses: hashicorp/terraform-github-actions/apply@v0.4.4
      env:
        TF_ACTION_COMMENT: false
        TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_cloudflare_email }}
        TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_cloudflare_token }}
        TF_VAR_github_org: ${{ secrets.TF_VAR_github_org }}
        TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
        TF_VAR_scaleway_org: ${{ secrets. TF_VAR_scaleway_org }}
        TF_VAR_scaleway_token: ${{ secrets.TF_VAR_scaleway_token }}
        TF_VAR_ssh_root_public_key: ${{ secrets.TF_VAR_ssh_root_public_key }}
        TF_VAR_ssh_root_private_key: ${{ secrets.TF_VAR_ssh_root_private_key }}
        TF_VAR_ssh_tech_public_key: ${{ secrets.TF_VAR_ssh_tech_public_key }}

    - name: Re-encrypt secrets
      uses: actions/bin/sh@master
      with:
        args: |
          if [ ! -f "terraform.tfstate" ]; then
            echo "State not found in repo after apply!"
            exit 1
          fi
          openssl enc -aes-256-cbc -salt -in terraform.tfstate -out terraform.tfstate.enc -pass env:STATE_PASSWORD
          rm terraform.tfstate
      env:
        STATE_PASSWORD: ${{ secrets.TF_STATE_SECRET }}

    - name: Git commit new state
      uses: actions/bin/sh@master
      with:
        args: |
          if [ ! -f "terraform.tfstate.enc" ]; then
            echo "State not found in repo after apply!"
            exit 1
          fi
          git add terraform.tfstate.enc
          git commit -m "chore(state): update state"
          git push


