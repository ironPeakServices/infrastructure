on: [pull_request]

jobs:

  k8slint:
    name: Kubernetes
    runs-on: ubuntu-latest
    steps:
    -
      uses: actions/checkout@v2
    -
      name: Set up Helm
      uses: azure/setup-helm@v1
    -
      name: Compile helm chart
      run: |
        mkdir compiled/
        helm template helm/ > compiled/all.yaml
    -
      uses: stackrox/kube-linter-action@v1
      with:
        directory: compiled/
        config: .github/kubelinter.yml

  terraform-plan:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    -
      name: Checkout code
      uses: actions/checkout@v2
    -
      name: Checkout secrets
      uses: actions/checkout@v2
      with:
        repository: hazcod/infrastructure-state
        path: terraform/state/
        token: ${{ secrets.GITHUB_MERGE_TOKEN }}
    -
      name: Terraform - Init
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_subcommand: "init"
        tf_actions_version: "latest"
        tf_actions_working_dir: terraform/
    -
      name: Terraform - Lint
      uses: reviewdog/action-tflint@v1.2.2
      with:
        github_token: ${{ secrets.github_token }}
        reporter: github-pr-review
        flags: "--deep"
        tf_actions_working_dir: terraform/
    -
      name: Terraform - Validate
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_subcommand: "validate"
        tf_actions_version: "latest"
        tf_actions_working_dir: terraform/
    -
      name: Terraform - Plan
      uses: hashicorp/terraform-github-actions@v0.8.0
      with:
        tf_actions_subcommand: "plan"
        tf_actions_version: "latest"
        tf_actions_working_dir: terraform/
      env:
        TF_LOG: WARN
        TF_VAR_cloudflared_tunnel_token: ${{ secrets.TF_VAR_cloudflared_tunnel_token }}
        TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_cloudflare_email }}
        TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_cloudflare_token }}
        TF_VAR_github_org: ${{ secrets.TF_VAR_github_org }}
        TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
        TF_VAR_scaleway_org: ${{ secrets. TF_VAR_scaleway_org }}
        TF_VAR_scaleway_accesstoken: ${{ secrets.TF_VAR_accesstoken }}
        TF_VAR_scaleway_secrettoken: ${{ secrets.TF_VAR_secrettoken }} 
    -
      name: validate manifests in dir1 and dir2
      uses: makocchi-git/actions-k8s-manifests-validate@v1.0.0
      with:
        files: kubernetes/
        token: ${{ secrets.GITHUB_TOKEN }}

  e2etesting:
    name: E2E Testing
    needs: on-pull-request
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v2
    -
      name: Extract k8s version
      run: |
        echo ::set-output name=k8s_version::"$(./terraform/modules/scaleway/extract-kubernetes-version.sh ./.github/kubernetes/go.mod)"
        echo "K8S version is ${{ env.k8s_version }}"
    - 
      name: Set up kind with K8s version ${{ env.k8s_version }}
      uses: engineerd/setup-kind@v0.4.0
      with:
          name: ironpeak-test-cluster
          image: kindest/node:${{ env.k8s_version }}
          version: ${{ env.k8s_version }}
    - 
      name: K8S Info
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system
        echo "current-context:" $(kubectl config current-context)
        echo "environment-kubeconfig:" ${KUBECONFIG}
    - 
      name: Run tests
      run: |
        echo "Running tests:"
        ./tests/test.sh
