name: PR Check
on: [pull_request]

jobs:
  on-pull-request:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    - 
      name: Checkout code
      uses: actions/checkout@v2
    - 
      name: Checkout secrets
      uses: actions/checkout@v2
      with:
        repository: hazcod/infrastructure-state
        path: terraform/state/
        token: ${{ secrets.GITHUB_MERGE_TOKEN }}
    -
      name: Extract terraform version
      run: |
        echo ::set-env name=terraform-version::"$(./terraform/modules/scaleway/extract-kubernetes-version.sh .github/terraform/go.mod | jq -r .version)"
        echo "terraform version is ${{ env.terraform_version }}"
    - 
      name: Setup terraform ${{ env.terraform_version }}
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: ${{ env.terraform_version }}"
    - 
      name: terraform - init
      run: terraform init terraform/
    - 
      name: terraform - validate
      run: terraform validate -no-color terraform/
    - 
      name: terraform - plan
      run: terraform plan -no-color terraform/
      env:
        TF_LOG: WARN
        TF_ACTION_COMMENT: false
        TF_VAR_cloudflared_tunnel_token: ${{ secrets.TF_VAR_cloudflared_tunnel_token }}
        TF_VAR_cloudflare_email: ${{ secrets.TF_VAR_cloudflare_email }}
        TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_cloudflare_token }}
        TF_VAR_github_org: ${{ secrets.TF_VAR_github_org }}
        TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
        TF_VAR_scaleway_org: ${{ secrets. TF_VAR_scaleway_org }}
        TF_VAR_scaleway_accesstoken: ${{ secrets.TF_VAR_accesstoken }}
        TF_VAR_scaleway_secrettoken: ${{ secrets.TF_VAR_secrettoken }}
    - 
      name: Helmsman - lint
      uses: docker://praqma/helmsman:v3.1.0
      with:
        command: helmsman -kubeconfig terraform/kubeconfig -f helm/helmfile.yaml'
    - 
      name: Kubernetes - validate manifests
      uses: makocchi-git/actions-k8s-manifests-validate@v1.0.0
      with:
        files: kubernetes/
        token: ${{ secrets.GITHUB_TOKEN }}

  e2etesting:
    name: E2E Testing
    needs: on-pull-request
    runs-on: ubuntu-latest
    steps:
    - 
      uses: actions/checkout@v2
    -
      name: Extract kind version
      run: |
        echo ::set-env name=kind_version::"$(./terraform/modules/scaleway/extract-kubernetes-version.sh .github/kind/go.mod | jq -r .version)"
        echo "kind version is ${{ env.kind_version }}"
    -
      name: Extract k8s version
      run: |
        echo ::set-env name=k8s_version::"$(./terraform/modules/scaleway/extract-kubernetes-version.sh .github/kubernetes/go.mod | jq -r .version)"
        echo "K8S version is ${{ env.k8s_version }}"
    - 
      name: Set up kind with K8s version ${{ env.k8s_version }}
      uses: engineerd/setup-kind@v0.4.0
      with:
        version: ${{ env.kind_version }}
        name: ironpeak-test-cluster
        image: kindest/node:${{ env.k8s_version }}
    - 
      name: K8S Info
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system
        echo "current-context:" $(kubectl config current-context)
        echo "environment-kubeconfig:" ${KUBECONFIG}
    - 
      name: Run tests
      run: |
        echo "Running tests:"
        ./tests/test.sh
