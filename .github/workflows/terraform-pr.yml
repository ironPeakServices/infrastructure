name: PR Check
on: [pull_request]

jobs:
  on-pull-request:
    name: Terraform
    runs-on: ubuntu-latest
    steps:
    
    - name: Checkout code
      uses: actions/checkout@master
      
    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.5.2
      with:
        tf_actions_subcommand: 'fmt'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Decrypt secrets
      env:
        STATE_PASSWORD: ${{ secrets.TF_STATE_SECRET }}
      run: |
        if [ -f "terraform.tfstate" ]; then
          echo "State found in repo!"
          exit 1
        fi
        if [ ! -f "terraform.tfstate.enc" ]; then
          echo "No state found, starting fresh (!)"
          exit 0
        fi
        openssl enc -d -aes-256-cbc -md sha512 -salt -in terraform.tfstate.enc -out terraform.tfstate -pass env:STATE_PASSWORD
        if [ ! -f terraform.tfstate ]; then
          echo "Decryption failed"
          exit 1
        fi

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.5.2
      with:
        tf_actions_subcommand: 'init'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.5.2
      with:
        tf_actions_subcommand: 'validate'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: 'Terraform Format'
      uses: hashicorp/terraform-github-actions@v0.5.2
      with:
        tf_actions_subcommand: 'plan'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        TF_VAR_cloudflare_token: ${{ secrets.TF_VAR_cloudflare_token }}
        TF_VAR_github_org: ${{ secrets.TF_VAR_github_org }}
        TF_VAR_github_token: ${{ secrets.TF_VAR_github_token }}
        TF_VAR_scaleway_org: ${{ secrets. TF_VAR_scaleway_org }}
        TF_VAR_scaleway_token: ${{ secrets.TF_VAR_scaleway_token }}
        TF_VAR_scaleway_accesstoken: ${{ secrets.TF_VAR_scaleway_accesstoken }}
        TF_VAR_ssh_root_public_key: ${{ secrets.TF_VAR_ssh_root_public_key }}
        TF_VAR_ssh_root_private_key: ${{ secrets.TF_VAR_ssh_root_private_key }}
        TF_VAR_ssh_tech_public_key: ${{ secrets.TF_VAR_ssh_tech_public_key }}     

    - name: Cleanup secrets
      run: rm terraform.tfstate || true
